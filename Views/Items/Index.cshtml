@model AOWebApp.ViewModels.ItemSearchViewModel

@functions {
    public string ShortText(string? text)
    {
        if (string.IsNullOrWhiteSpace(text)) return "";
        text = text.Trim();
        return text.Length > 100 ? text.Substring(0, 100) + "..." : text;
    }
}


@{
    ViewData["Title"] = "Shop Items";
}

<div class="bg-light py-3 mb-4 text-center">
    <h2 class="mb-0">@ViewData["Title"]</h2>
</div>

<a asp-action="Create" class="btn btn-outline-primary">Create New</a>

<br/>
<br/>
<form method="post" asp-controller="Items" asp-action="Index" class="mb-3">
    <div class="row g-2 align-items-center">
        <div class="col-auto">
            <label for="searchText" class="col-form-label">Item Search</label>
        </div>
        <div class="col">
            <input asp-for="SearchText"
                   class="form-control"
                   maxlength="100"
                   placeholder="Type here..."
                   title="Search by item name. Max 100 chars." />
        </div>
        <div class="col-auto">
            <select asp-for="CategoryId" class="form-select" asp-items="Model.CategoryList"
                    title="View items for a specific category">
                <option value="">All Categories...</option>
            </select>
        </div>

    </div>

    <div class="mt-2">
        <input type="submit" class="btn btn-outline-primary" value="Submit" />
        <a asp-action="Index" class="btn btn-outline-danger">Reset</a>
    </div>
</form>

<br/>
<br/>

<div class="container"> 
    <div class="row row-cols-3 small">
        @foreach (var item in Model.ItemList)
        {
            <div class="col card container-sm" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">@item.TheItem.ItemName</h5>
                    <p class="card-text">
                        Category: @item.TheItem.Category.CategoryName <br />
                        Description: @ShortText(item.TheItem.ItemDescription)<br />
                        Cost: @item.TheItem.ItemCost.ToString("C")<br />
                        Rating:
                        @if (item.ReviewCount > 0)
                        {
                            <span>@item.AverageRating across @item.ReviewCount Reviews</span>
                        }
                        else
                        {
                            <span>This item has not been reviewed</span>
                        }
                    </p>

                    <img src="@item.TheItem.ItemImage" class="card-img-bottom" alt="@item.TheItem.ItemName">
                    <br />
                    <br />
                    <a asp-controller="Items" asp-action="Details" asp-route-id="@item.TheItem.ItemId"
                       class="btn btn-outline-primary">
                        View Item Detail
                    </a>

                </div>
            </div>

        }

    </div>


</div>
